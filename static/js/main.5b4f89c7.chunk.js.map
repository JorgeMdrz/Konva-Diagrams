{"version":3,"sources":["components/Board.jsx","App.js","reportWebVitals.js","index.js"],"names":["GetElement","rect","id","x","y","width","height","fill","shadowBlur","draggable","Board","dragElement","React","useRef","stageRef","useState","elements","setElements","onDragStart","e","current","target","onDrop","preventDefault","setPointersPositions","console","log","getPointerPosition","concat","onDragOver","className","window","innerWidth","innerHeight","ref","map","elem","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAkBMA,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACxB,OAAQ,cAAC,IAAD,CAEJC,EAAGF,EAAKE,EACRC,EAAGH,EAAKG,EACRC,MAAO,IACPC,OAAQ,IACRC,KAAK,MACLC,WAAY,GACZC,WAAa,GAPRP,IAiDEQ,EAtCD,WACV,IAAMC,EAAcC,IAAMC,SACpBC,EAAWF,IAAMC,SACvB,EAAgCD,IAAMG,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACI,gCACI,qBACIR,UAAU,OACVS,YAAa,SAACC,GACVR,EAAYS,QAAUD,EAAEE,QAHhC,kBAMA,qBACIC,OAAQ,SAACH,GACLA,EAAEI,iBACFT,EAASM,QAAQI,qBAAqBL,GACtCM,QAAQC,IAAIZ,EAASM,QAAQO,sBAC7BV,EACID,EAASY,OAAO,CACZd,EAASM,QAAQO,yBAI7BE,WAAY,SAACV,GAAD,OAAOA,EAAEI,kBAXzB,SAaI,cAAC,IAAD,CAAOO,UAAU,QAAQzB,MAAO0B,OAAOC,WAAY1B,OAAQyB,OAAOE,YAAaC,IAAKpB,EAApF,SACI,cAAC,IAAD,UACKE,EAASmB,KAAI,SAACC,EAAMC,GACjB,OAAO,cAAC,EAAD,CAAwBpC,KAAQmC,GAAfC,gBChDrCC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCKSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5b4f89c7.chunk.js","sourcesContent":["/**\n * After searching a bit this is my understanding between class and functional components.\n * Pros of using functional component is:\n *  - Less Code, thus easy to read and test\n *  - In future it might have performance boost in some cases.\n *  - Plus, react devs seem to be more focused on functional.\n * \n * Functional components were considered as stateless components, because it did not setState.\n * But after 16.8 Hooks update, the functional components now can use useEffect to get and set states.\n * \n * More info: https://reactjs.org/docs/hooks-effect.html\n * \n * \n * Using this example: https://codesandbox.io/s/github/konvajs/site/tree/master/react-demos/drop_image_into_stage?from-embed=&file=/src/index.js:1134-1174\n */\nimport React from 'react';\nimport { Stage, Layer, Rect } from 'react-konva';\n\nconst GetElement = ({ rect, id }) => {\n    return (<Rect\n        key={id}\n        x={rect.x}\n        y={rect.y}\n        width={100}\n        height={100}\n        fill=\"red\"\n        shadowBlur={10}\n        draggable = {true}\n    />)\n}\n\nconst Board = () => {\n    const dragElement = React.useRef(); //Not sure what this is .useRef()\n    const stageRef = React.useRef();\n    const [elements, setElements] = React.useState([]);\n\n    return (\n        <div>\n            <div\n                draggable=\"true\"\n                onDragStart={(e) => {\n                    dragElement.current = e.target;\n                }}>Test</div>\n\n            <div\n                onDrop={(e) => {\n                    e.preventDefault();\n                    stageRef.current.setPointersPositions(e);\n                    console.log(stageRef.current.getPointerPosition())\n                    setElements(\n                        elements.concat([\n                            stageRef.current.getPointerPosition(),\n                        ])\n                    )\n                }}\n                onDragOver={(e) => e.preventDefault()}>\n\n                <Stage className=\"board\" width={window.innerWidth} height={window.innerHeight} ref={stageRef}>\n                    <Layer>\n                        {elements.map((elem, index) => {\n                            return <GetElement key={index} rect = {elem} ></GetElement>\n                        })}\n                    </Layer>\n                </Stage>\n            </div>\n        </div>\n    );\n}\n\nexport default Board;\n\n\n//SHEESH, It is late right now 2:00. But I will document what I did tomorrow.","import './App.css';\nimport Board from './components/Board'\nimport Browser from './components/Browser/Browser'\nimport Properties from './components/Properties'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board></Board>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}